# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'en'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # make sure to inject the MySql order repository into the OrderService, you could possibly change this out with
  # a json storage service, document storage / whatnot...


  App\Repository\OrderStorageInterface:
    class: App\Repository\DatabaseOrderRepository # for easy switching to another storagemethod, uncomment the next line.
    #    class: App\Repository\FileStorageOrderRepository


  App\Notification\:
    resource: '../src/Notification/*'
    tags: ['app.notification_service']

  App\EventSubscriber\OrderSavedSubscriber:
    arguments:
      $notificationServices: !tagged app.notification_service